  {
    "requester": "someone@example.net", 
    "constants": {
      "chromosome": "chr22",
      "samplename": "NA12878",
      "inputbamfile": "NA12878-Macrogen-chr22.bam",
      "outputbamfile": "genome.recal.bam",
      "outputvcffile": "genome.recal.vcf",
      "reference": "ucsc.hg19.fasta",
      "goldindels": "Mills_and_1000G_gold_standard.indels.hg19.vcf",
      "dbsnp": "dbsnp_138.hg19.vcf",
      "hapmap": "hapmap_3.3.hg19.vcf",
      "omni": "1000G_omni2.5.hg19.vcf",
      "phase1indels": "1000G_phase1.indels.hg19.vcf",
      "phase1snps": "1000G_phase1.snps.high_confidence.hg19.vcf",
      "GATKkey": "stanford.edu.key",
      "GATKthreads": "8",
      "dockermount": "/outside",
      "samtools_container": "isaacliao/samtools-0.1.19",
      "gatk_container": "isaacliao/gatk-3.1.1",
      "bwa_container": "isaacliao/bwa-0.7.4",
      "picard_container": "isaacliao/picard-1.32",
      "fix_bai_name_container": "isaacliao/fix_bai_name",
      "tabix_container": "isaacliao/tabix-0.2.5"
    },
    "workflows": [
        {
          "name": "medgap_poc",
          "data_bindings_file_paths": [
            "${inputbamfile}",
            "${reference}",
            "${reference}.bwt",
            "${reference}.pac",
            "${reference}.ann",
            "${reference}.amb",
            "${reference}.sa",
            "${reference}.fai",
            "${goldindels}",
            "${phase1indels}",
            "${phase1snps}",
            "${dbsnp}",
            "${hapmap}",
            "${omni}",
            "${GATKkey}"
          ],
          "steps": [
            {
              "name": "bam2fq",
              "environment": {
                "docker_image": "${samtools_container}"
              }, 
              "command": "samtools bam2fq ${inputbamfile} > ${samplename}.fastq", 
              "resources": {
                "cores": "4", 
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "bam2fq_in",
                  "file_path": "${inputbamfile}"
                }
              ],
              "output_ports": [
                {
                  "name": "bam2fq_out", 
                  "file_path": "${samplename}.fastq"
                }
              ]
            }, 
            {
              "name": "align",
              "environment": {
                "docker_image": "${bwa_container}"
              }, 
              "command": "bwa mem -CMp -t 4 -R \"@RG\\tID:0\\tLB:Library\\tPL:Illumina\\tSM:${samplename}\" ${reference} ${samplename}.fastq > ${samplename}.bwa.sam",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "align_in",
                  "file_path": "${samplename}.fastq"
                },
                {
                  "name": "reference_index_bwt",
                  "file_path": "${reference}.bwt"
                },
                {
                  "name": "reference_index_pac",
                  "file_path": "${reference}.pac"
                },
                {
                  "name": "reference_index_sa",
                  "file_path": "${reference}.sa"
                },
                {
                  "name": "reference_index_ann",
                  "file_path": "${reference}.ann"
                },
                {
                  "name": "reference_index_amb",
                  "file_path": "${reference}.amb"
                }
              ],
              "output_ports": [
                {
                  "name": "align_out", 
                  "file_path": "${samplename}.bwa.sam"
                }
              ]
            }, 
            {
              "name": "samtobam",
              "environment": {
                "docker_image": "${samtools_container}"
              }, 
              "command": "samtools view -Sbt ${reference}.fai -o ${samplename}.bwa.bam ${samplename}.bwa.sam",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "samtobam_in",
                  "file_path": "${samplename}.fastq"
                },
                {
                  "name": "reference_index_fai",
                  "file_path": "${reference}.fai"
                }
              ],
              "output_ports": [
                {
                  "name": "samtobam_out", 
                  "file_path": "${samplename}.bwa.bam"
                }
              ]
            }, 
            {
              "name": "mergeinputbams",
              "environment": {
                "docker_image": "${picard_container}"
              }, 
              "command": "java -Xms8g -Xmx8g -jar /opt/picard-tools-1.32/MergeSamFiles.jar TMP_DIR=/outside INPUT=${samplename}.bwa.bam USE_THREADING=true CREATE_INDEX=true OUTPUT=${samplename}.bwa.sorted.bam",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "mergeinputbams_in",
                  "file_path": "${samplename}.bwa.bam"
                }
              ],
              "output_ports": [
                {
                  "name": "mergeinputbams_out", 
                  "file_path": "${samplename}.bwa.sorted.bam"
                }
              ]
            }, 
            {
              "name": "indexbam",
              "environment": {
                "docker_image": "${samtools_container}"
              }, 
              "command": "samtools index ${samplename}.bwa.sorted.bam",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "indexbam_in",
                  "file_path": "${samplename}.bwa.sorted.bam"
                }
              ],
              "output_ports": [
                {
                  "name": "indexbam_out", 
                  "file_path": "${samplename}.bwa.sorted.bam.bai"
                }
              ]
            }, 
            {
              "name": "extractchromosome",
              "environment": {
                "docker_image": "${samtools_container}"
              }, 
              "command": "samtools view ${samplename}.bwa.sorted.bam ${chromosome} -bo ${chromosome}.bam",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "extractchromosome_in",
                  "file_path": "${samplename}.bwa.sorted.bam"
                },
                {
                  "name": "extractchromosome_index_in",
                  "file_path": "${samplename}.bwa.sorted.bam.bai"
                }
              ],
              "output_ports": [
                {
                  "name": "extractchromosome_out", 
                  "file_path": "${chromosome}.bam"
                }
              ]
            }, 
            {
              "name": "indexchromosomebam",
              "environment": {
                "docker_image": "${samtools_container}"
              }, 
              "command": "samtools index ${chromosome}.bam",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "indexchromosomebam_in",
                  "file_path": "${chromosome}.bam"
                }
              ],
              "output_ports": [
                {
                  "name": "indexchromosomebam_out", 
                  "file_path": "${chromosome}.bam.bai"
                }
              ]
            }, 
            {
              "name": "fixindexnamechromosome",
              "environment": {
                "docker_image": "${fix_bai_name_container}"
              }, 
              "command": "python /opt/fix_bai_name.py ${chromosome}.bam.bai",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "fixindexnamechromosome_in",
                  "file_path": "${chromosome}.bam.bai"
                }
              ],
              "output_ports": [
                {
                  "name": "fixindexnamechromosome_out",
                  "file_path": "${chromosome}.bai"
                }
              ]
            },
            {
              "name": "markduplicates",
              "environment": {
                "docker_image": "${picard_container}"
              }, 
              "command": "java -Xms5g -Xmx5g -jar /opt/picard-tools-1.32/MarkDuplicates.jar TMP_DIR=/outside I=${chromosome}.bam O=${chromosome}.nodup.bam M=${chromosome}.bam.metrics VALIDATION_STRINGENCY=SILENT ASSUME_SORTED=true REMOVE_DUPLICATES=false",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "markduplicates_in",
                  "file_path": "${chromosome}.bam"
                }
              ],
              "output_ports": [
                {
                  "name": "markduplicates_out", 
                  "file_path": "${chromosome}.nodup.bam"
                },
                {
                  "name": "markduplicates_metrics_out", 
                  "file_path": "${chromosome}.bam.metrics"
                }
              ]
            }, 
            {
              "name": "indexnodupbam",
              "environment": {
                "docker_image": "${samtools_container}"
              }, 
              "command": "samtools index ${chromosome}.nodup.bam",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "indexnodupbam_in",
                  "file_path": "${chromosome}.nodup.bam"
                }
              ],
              "output_ports": [
                {
                  "name": "indexnodupbam_out", 
                  "file_path": "${chromosome}.nodup.bam.bai"
                }
              ]
            }, 
            {
              "name": "fixindexnamenodup",
              "environment": {
                "docker_image": "${fix_bai_name_container}"
              }, 
              "command": "python /opt/fix_bai_name.py ${chromosome}.nodup.bam.bai",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "fixindexnamenodup_in",
                  "file_path": "${chromosome}.nodup.bam.bai"
                }
              ],
              "output_ports": [
                {
                  "name": "fixindexnamenodup_out",
                  "file_path": "${chromosome}.nodup.bai"
                }
              ]
            },
            {
              "name": "findtargets",
              "environment": {
                "docker_image": "${gatk_container}"
              }, 
              "command": "java -Xms8g -Xmx8g -jar /opt/GenomeAnalysisTK.jar -T RealignerTargetCreator -I ${chromosome}.nodup.bam -R ${reference} -o ${chromosome}.realn.intervals -L ${chromosome} -known ${goldindels} -known ${phase1indels} -et NO_ET -K ${GATKkey} -nt ${GATKthreads}",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "findtargets_in",
                  "file_path": "${chromosome}.nodup.bam"
                },
                {
                  "name": "findtargets_reference_in",
                  "file_path": "${reference}"
                },
                {
                  "name": "findtargets_goldindels_in",
                  "file_path": "${goldindels}"
                },
                {
                  "name": "findtargets_phase1indels_in",
                  "file_path": "${phase1indels}"
                },
                {
                  "name": "findtargets_GATKkey_in",
                  "file_path": "${GATKkey}"
                }
              ],
              "output_ports": [
                {
                  "name": "findtargets_out", 
                  "file_path": "${chromosome}.realn.intervals"
                }
              ]
            }, 
            {
              "name": "realign",
              "environment": {
                "docker_image": "${gatk_container}"
              }, 
              "command": "java -Xms8g -Xmx8g -Djava.io.tmpdir=${dockermount} -jar /opt/GenomeAnalysisTK.jar -T IndelRealigner -I ${chromosome}.nodup.bam -R ${reference} -o ${chromosome}.realn.bam -L ${chromosome} -targetIntervals ${chromosome}.realn.intervals -known ${goldindels} -known ${phase1indels} -et NO_ET -K ${GATKkey}",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "realign_in",
                  "file_path": "${chromosome}.realn.intervals"
                },
                {
                  "name": "realign_nodup_in",
                  "file_path": "${chromosome}.nodup.bam"
                },
                {
                  "name": "realign_reference_in",
                  "file_path": "${reference}"
                },
                {
                  "name": "findtargets_goldindels_in",
                  "file_path": "${goldindels}"
                },
                {
                  "name": "findtargets_phase1indels_in",
                  "file_path": "${phase1indels}"
                },
                {
                  "name": "findtargets_GATKkey_in",
                  "file_path": "${GATKkey}"
                }
              ],
              "output_ports": [
                {
                  "name": "realign_out",
                  "file_path": "${chromosome}.realn.bam"
                }
              ]
            }, 
            {
              "name": "fixmatepairs",
              "environment": {
                "docker_image": "${picard_container}"
              }, 
              "command": "java -Xms8g -Xmx8g -jar /opt/picard-tools-1.32/FixMateInformation.jar TMP_DIR=${dockermount} INPUT=${chromosome}.realn.bam OUTPUT=${chromosome}.realn.fixed.bam VALIDATION_STRINGENCY=SILENT SORT_ORDER=coordinate",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "fixmatepairs_in",
                  "file_path": "${chromosome}.realn.bam"
                }
              ],
              "output_ports": [
                {
                  "name": "fixmatepairs_out", 
                  "file_path": "${chromosome}.realn.fixed.bam"
                }
              ]
            }, 
            {
              "name": "indexrealnbam",
              "environment": {
                "docker_image": "${samtools_container}"
              }, 
              "command": "samtools index ${chromosome}.realn.fixed.bam",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "indexrealnbam_in",
                  "file_path": "${chromosome}.realn.fixed.bam"
                }
              ],
              "output_ports": [
                {
                  "name": "indexrealnbam_out", 
                  "file_path": "${chromosome}.realn.fixed.bam.bai"
                }
              ]
            },
            {
              "name": "fixindexrealn",
              "environment": {
                "docker_image": "${fix_bai_name_container}"
              }, 
              "command": "python /opt/fix_bai_name.py ${chromosome}.realn.fixed.bam.bai",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "fixindexrealn_in",
                  "file_path": "${chromosome}.realn.fixed.bam.bai"
                }
              ],
              "output_ports": [
                {
                  "name": "fixindexrealn_out",
                  "file_path": "${chromosome}.realn.fixed.bai"
                }
              ]
            },
            {
              "name": "bqsr",
              "environment": {
                "docker_image": "${gatk_container}"
              }, 
              "command": "java -Xms5g -Xmx5g -jar /opt/GenomeAnalysisTK.jar -T BaseRecalibrator -I ${chromosome}.realn.fixed.bam -R ${reference} -o ${chromosome}.recal.grp -knownSites ${goldindels} -knownSites ${phase1indels} -knownSites ${dbsnp} -K ${GATKkey} -nct ${GATKthreads}",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "bqsr_in",
                  "file_path": "${chromosome}.realn.fixed.bam"
                },
                {
                  "name": "bqsr_index_in",
                  "file_path": "${chromosome}.realn.fixed.bai"
                },
                {
                  "name": "bqsr_reference_in",
                  "file_path": "${reference}"
                },
                {
                  "name": "bqsr_goldindels_in",
                  "file_path": "${goldindels}"
                },
                {
                  "name": "bqsr_phase1indels_in",
                  "file_path": "${phase1indels}"
                },
                {
                  "name": "bqsr_GATKkey_in",
                  "file_path": "${GATKkey}"
                },
                {
                  "name": "bqsr_dbsnp_in",
                  "file_path": "${dbsnp}"
                }
              ],
              "output_ports": [
                {
                  "name": "bqsr_out",
                  "file_path": "${chromosome}.recal.grp"
                }
              ]
            },   
            {
              "name": "printreads",
              "environment": {
                "docker_image": "${gatk_container}"
              }, 
              "command": "java -Xms5g -Xmx5g -jar /opt/GenomeAnalysisTK.jar -R ${reference} -I ${chromosome}.realn.fixed.bam -o ${chromosome}.recal.bam -T PrintReads -BQSR ${chromosome}.recal.grp -K ${GATKkey} -nct ${GATKthreads}",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "printreads_in",
                  "file_path": "${chromosome}.realn.fixed.bam"
                },
                {
                  "name": "printreads_index_in",
                  "file_path": "${chromosome}.realn.fixed.bai"
                },
                {
                  "name": "printreads_reference_in",
                  "file_path": "${reference}"
                },                
                {
                  "name": "printreads_GATKkey_in",
                  "file_path": "${GATKkey}"
                },
                {
                  "name": "printreads_bqsr_in",
                  "file_path": "${chromosome}.recal.grp"
                }
              ],
              "output_ports": [
                {
                  "name": "printreads_out",
                  "file_path": "${chromosome}.recal.bam"
                }
              ]
            },
            {
              "name": "indexbamrecal",
              "environment": {
                "docker_image": "${samtools_container}"
              }, 
              "command": "samtools index ${chromosome}.recal.bam",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "indexbamrecal_in",
                  "file_path": "${chromosome}.recal.bam"
                }
              ],
              "output_ports": [
                {
                  "name": "indexbamrecal_out",
                  "file_path": "${chromosome}.recal.bam.bai"
                }
              ]
            },
            {
              "name": "fixindexrecal",
              "environment": {
                "docker_image": "${fix_bai_name_container}"
              }, 
              "command": "python /opt/fix_bai_name.py ${chromosome}.recal.bam.bai",
              "resources": {
                "cores": "1",
                "memory": "1GB"
              }, 
              "input_ports": [
                {
                  "name": "fixindexrecal_in",
                  "file_path": "${chromosome}.recal.bam.bai"
                }
              ],
              "output_ports": [
                {
                  "name": "fixindexrecal_out",
                  "file_path": "${chromosome}.recal.bai"
                }
              ]
            },
            {
              "name": "haplotypecaller",
              "environment": {
                "docker_image": "${gatk_container}"
              }, 
              "command": "java -Xmx8g -Xms8g -Djava.io.tmpdir=${dockermount} -jar /opt/GenomeAnalysisTK.jar -T HaplotypeCaller -R ${reference} -I ${chromosome}.recal.bam --dbsnp ${dbsnp} -o ${chromosome}.gatk.vcf.hc.vcf -stand_call_conf 20.0 -stand_emit_conf 10.0 --genotyping_mode DISCOVERY -nct ${GATKthreads}",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "haplotypecaller_in",
                  "file_path": "${chromosome}.recal.bam"
                },
                {
                  "name": "haplotypecaller_index_in",
                  "file_path": "${chromosome}.recal.bai"
                },
                {
                  "name": "haplotypecaller_reference_in",
                  "file_path": "${reference}"
                }                
              ],
              "output_ports": [
                {
                  "name": "haplotypecaller_out",
                  "file_path": "${chromosome}.gatk.vcf.hc.vcf"
                }
              ]
            },
            {
              "name": "selectsnps",
              "environment": {
                "docker_image": "${gatk_container}"
              }, 
              "command": "java -Xmx8g -Xms8g -jar /opt/GenomeAnalysisTK.jar -T SelectVariants -R ${reference} -V ${chromosome}.gatk.vcf.hc.vcf -o ${chromosome}.gatk.vcf.snp -selectType SNP",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "selectsnps_in",
                  "file_path": "${chromosome}.gatk.vcf.hc.vcf"
                },
                {
                  "name": "selectsnps_reference_in",
                  "file_path": "${reference}"
                }                
              ],
              "output_ports": [
                {
                  "name": "selectsnps_out",
                  "file_path": "${chromosome}.gatk.vcf.snp"
                }
              ]
            },
            {
              "name": "selectindels",
              "environment": {
                "docker_image": "${gatk_container}"
              }, 
              "command": "java -Xmx8g -Xms8g -jar /opt/GenomeAnalysisTK.jar -T SelectVariants -R ${reference} -V ${chromosome}.gatk.vcf.hc.vcf -o ${chromosome}.gatk.vcf.indel -selectType INDEL",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "selectindels_in",
                  "file_path": "${chromosome}.gatk.vcf.hc.vcf"
                },
                {
                  "name": "selectindels_reference_in",
                  "file_path": "${reference}"
                }                
              ],
              "output_ports": [
                {
                  "name": "selectindels_out",
                  "file_path": "${chromosome}.gatk.vcf.indel"
                }
              ]
            },
            {
              "name": "combinesnpsindels",
              "environment": {
                "docker_image": "${gatk_container}"
              }, 
              "command": "java -Xmx8g -Xms8g -jar /opt/GenomeAnalysisTK.jar -R ${reference} -T CombineVariants --variant ${chromosome}.gatk.vcf.snp --variant ${chromosome}.gatk.vcf.indel -o ${chromosome}.gatk.vcf",
              "resources": {
                "cores": "4",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "combinesnpsindels_snps_in",
                  "file_path": "${chromosome}.gatk.vcf.snp"
                },
                {
                  "name": "combinesnpsindels_snps_in",
                  "file_path": "${chromosome}.gatk.vcf.indel"
                },
                {
                  "name": "combinesnpsindels_reference_in",
                  "file_path": "${reference}"
                }
              ],
              "output_ports": [
                {
                  "name": "combinesnpsindels_out",
                  "file_path": "${chromosome}.gatk.vcf"
                }
              ]
            },            
            {
              "name": "mergechromosomebams",
              "environment": {
                "docker_image": "${picard_container}"
              }, 
              "command": "java -Xms5g -Xmx5g -jar /opt/picard-tools-1.32/MergeSamFiles.jar TMP_DIR=${dockermount} INPUT=${chromosome}.recal.bam USE_THREADING=true CREATE_INDEX=true OUTPUT=${outputbamfile}",
              "resources": {
                "cores": "1",
                "memory": "6GB"
              }, 
              "input_ports": [
                {
                  "name": "mergechromosomebams_in",
                  "file_path": "${chromosome}.recal.bam"
                }
              ],
              "output_ports": [
                {
                  "name": "mergechromosomebams_out",
                  "file_path": "${outputbamfile}"
                }
              ]
            },
            {
              "name": "combinevcfs",
              "environment": {
                "docker_image": "${gatk_container}"
              }, 
              "command": "java -Xmx8g -Xms8g -jar /opt/GenomeAnalysisTK.jar -R ${reference} -T CombineVariants --variant:VCF ${dockermount}/${chromosome}.gatk.vcf -o ${samplename}.gatk.vcf",
              "resources": {
                "cores": "1",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "combinevcfs_in",
                  "file_path": "${chromosome}.gatk.vcf"
                },
                {
                  "name": "combinevcfs_reference_in",
                  "file_path": "${reference}"
                }
              ],
              "output_ports": [
                {
                  "name": "combinevcfs_out",
                  "file_path": "${samplename}.gatk.vcf"
                }
              ]
            },
            {
              "name": "selectsnpsforvqsr",
              "environment": {
                "docker_image": "${gatk_container}"
              }, 
              "command": "java -Xmx6g -Xms6g -jar /opt/GenomeAnalysisTK.jar -T SelectVariants -R ${reference} -V ${samplename}.gatk.vcf -o ${samplename}.snp.vcf -selectType SNP",
              "resources": {
                "cores": "1",
                "memory": "8GB"
              }, 
              "input_ports": [
                {
                  "name": "selectsnpsforvqsr_in",
                  "file_path": "${samplename}.gatk.vcf"
                },
                {
                  "name": "selectsnpsforvqsr_reference_in",
                  "file_path": "${reference}"
                }
              ],
              "output_ports": [
                {
                  "name": "selectsnpsforvqsr_out",
                  "file_path": "${samplename}.snp.vcf"
                }
              ]
            },   
            {
              "name": "trainvqsrforsnps",
              "environment": {
                "docker_image": "${gatk_container}"
              }, 
              "command": "java -Xmx6g -Xms6g -jar /opt/GenomeAnalysisTK.jar -T VariantRecalibrator -R ${reference} -input ${samplename}.snp.vcf -resource:hapmap,known=false,training=true,truth=true,prior=15.0 ${hapmap} -resource:omni,known=false,training=true,truth=true,prior=12.0 ${omni} -resource:1000G,known=false,training=true,truth=false,prior=10.0 ${phase1snps} -resource:dbsnp,known=true,training=false,truth=false,prior=2.0 ${dbsnp} -an DP -an QD -an FS -an MQRankSum -an ReadPosRankSum -tranche 100.0 -tranche 99.9 -tranche 99.0 -tranche 90.0 -mode SNP -recalFile ${samplename}.tmp.snp.vcf -tranchesFile ${samplename}.tranches.gatk.snp.recal.csv -nt ${GATKthreads} -rscriptFile ${samplename}.gatk.recal.snp.R",
              "resources": {
                "cores": "4",
                "memory": "8GB"
              }, 
              "input_ports": [
                {
                  "name": "trainvqsrforsnps_in",
                  "file_path": "${samplename}.snp.vcf"
                },
                {
                  "name": "trainvqsrforsnps_reference_in",
                  "file_path": "${reference}"
                },
                {
                  "name": "trainvqsrforsnps_hapmap_in",
                  "file_path": "${hapmap}"
                },
                {
                  "name": "trainvqsrforsnps_omni_in",
                  "file_path": "${omni}"
                },
                {
                  "name": "trainvqsrforsnps_phase1snps_in",
                  "file_path": "${phase1snps}"
                },
                {
                  "name": "trainvqsrforsnps_dbsnp_in",
                  "file_path": "${dbsnp}"
                }                
              ],
              "output_ports": [
                {
                  "name": "trainvqsrforsnps_recal_out",
                  "file_path": "${samplename}.tmp.snp.vcf"
                },
                {
                  "name": "trainvqsrforsnps_tranches_out",
                  "file_path": "${samplename}.tranches.gatk.snp.recal.csv"
                },
                {
                  "name": "trainvqsrforsnps_rscript_out",
                  "file_path": "${samplename}.gatk.recal.snp.R"
                }
              ]
            }, 
            {
              "name": "vqsrsnps",
              "environment": {
                "docker_image": "${gatk_container}"
              }, 
              "command": "java -Xmx3g -Xms3g -jar /opt/GenomeAnalysisTK.jar -T ApplyRecalibration -R ${reference} -input ${samplename}.snp.vcf --ts_filter_level 99.0 -tranchesFile ${samplename}.tranches.gatk.snp.recal.csv -recalFile ${samplename}.tmp.snp.vcf -o ${samplename}.vqsr.snp.vcf --mode SNP",
              "resources": {
                "cores": "1",
                "memory": "4GB"
              }, 
              "input_ports": [
                {
                  "name": "vqsrsnps_in",
                  "file_path": "${samplename}.snp.vcf"
                },
                {
                  "name": "vqsrsnps_reference_in",
                  "file_path": "${reference}"
                },
                {
                  "name": "vqsrsnps_recal_in",
                  "file_path": "${samplename}.tmp.snp.vcf"
                },
                {
                  "name": "vqsrsnps_tranches_in",
                  "file_path": "${samplename}.tranches.gatk.snp.recal.csv"
                }              
              ],
              "output_ports": [
                {
                  "name": "vqsrsnps_out",
                  "file_path": "${samplename}.vqsr.snp.vcf"
                }
              ]
            },       
            {
              "name": "selectindelsforvqsr",
              "environment": {
                "docker_image": "${gatk_container}"
              }, 
              "command": "java -Xmx6g -Xms6g -jar /opt/GenomeAnalysisTK.jar -T SelectVariants -R ${reference} -V ${samplename}.gatk.vcf -o ${samplename}.indel.vcf -selectType INDEL",
              "resources": {
                "cores": "1",
                "memory": "8GB"
              }, 
              "input_ports": [
                {
                  "name": "selectindelsforvqsr_in",
                  "file_path": "${samplename}.gatk.vcf"
                },
                {
                  "name": "selectindelsforvqsr_reference_in",
                  "file_path": "${reference}"
                }
              ],
              "output_ports": [
                {
                  "name": "selectindelsforvqsr_out",
                  "file_path": "${samplename}.indel.vcf"
                }
              ]
            },   
            {
              "name": "trainvqsrindels",
              "environment": {
                "docker_image": "${gatk_container}"
              }, 
              "command": "java -Xmx6g -Xms6g -jar /opt/GenomeAnalysisTK.jar -T VariantRecalibrator -R ${reference} -input ${samplename}.indel.vcf -resource:mills,known=true,training=true,truth=true,prior=12.0 ${goldindels} -an DP -an FS -an MQRankSum -an ReadPosRankSum -tranche 100.0 -tranche 99.9 -tranche 99.0 -tranche 90.0 -mode INDEL -recalFile ${samplename}.tmp.indel.vcf -tranchesFile ${samplename}.tranches.gatk.indel.recal.csv --maxGaussians 4 -nt ${GATKthreads} -rscriptFile ${samplename}.gatk.recal.indel.R",
              "resources": {
                "cores": "${GATKthreads}",
                "memory": "8GB"
              }, 
              "input_ports": [
                {
                  "name": "trainvqsrindels_in",
                  "file_path": "${samplename}.indel.vcf"
                },
                {
                  "name": "trainvqsrindels_reference_in",
                  "file_path": "${reference}"
                },
                {
                  "name": "trainvqsrindels_goldindels_in",
                  "file_path": "${goldindels}"
                }                
              ],
              "output_ports": [
                {
                  "name": "trainvqsrindels_recal_out",
                  "file_path": "${samplename}.tmp.indel.vcf"
                },
                {
                  "name": "trainvqsrindels_tranches_out",
                  "file_path": "${samplename}.tranches.gatk.indel.recal.csv"
                },
                {
                  "name": "trainvqsrindels_rscript_out",
                  "file_path": "${samplename}.gatk.recal.indel.R"
                }
              ]
            }, 
            {
              "name": "vqsrindels",
              "environment": {
                "docker_image": "${gatk_container}"
              }, 
              "command": "java -Xmx6g -Xms6g -jar /opt/GenomeAnalysisTK.jar -T ApplyRecalibration -R ${reference} -input ${samplename}.indel.vcf --ts_filter_level 99.0 -tranchesFile ${samplename}.tranches.gatk.indel.recal.csv -recalFile ${samplename}.tmp.indel.vcf -o ${samplename}.vqsr.indel.vcf --mode INDEL",
              "resources": {
                "cores": "1",
                "memory": "8GB"
              }, 
              "input_ports": [
                {
                  "name": "vqsrindels_in",
                  "file_path": "${samplename}.indel.vcf"
                },
                {
                  "name": "vqsrindels_reference_in",
                  "file_path": "${reference}"
                },
                {
                  "name": "vqsrindels_recal_in",
                  "file_path": "${samplename}.tmp.indel.vcf"
                },
                {
                  "name": "vqsrindels_tranches_in",
                  "file_path": "${samplename}.tranches.gatk.indel.recal.csv"
                }              
              ],
              "output_ports": [
                {
                  "name": "vqsrindels_out",
                  "file_path": "${samplename}.vqsr.indel.vcf"
                }
              ]
            },    
            {
              "name": "mergecalibratedvcfs",
              "environment": {
                "docker_image": "${gatk_container}"
              }, 
              "command": "java -Xmx8g -Xms8g -jar /opt/GenomeAnalysisTK.jar -R ${reference} -T CombineVariants --variant:VCF ${samplename}.vqsr.indel.vcf --variant:VCF ${samplename}.vqsr.snp.vcf -o genome.recal.vcf",
              "resources": {
                "cores": "1",
                "memory": "10GB"
              }, 
              "input_ports": [
                {
                  "name": "mergecalibratedvcfs_snp_in",
                  "file_path": "${samplename}.vqsr.snp.vcf"
                },
                {
                  "name": "mergecalibratedvcfs_indel_in",
                  "file_path": "${samplename}.vqsr.indel.vcf"
                },                
                {
                  "name": "mergecalibratedvcfs_reference_in",
                  "file_path": "${reference}"
                }             
              ],
              "output_ports": [
                {
                  "name": "mergecalibratedvcfs_out",
                  "file_path": "${outputvcffile}"
                }
              ]
            },   
            {
              "name": "compressvcf",
              "environment": {
                "docker_image": "${tabix_container}"
              }, 
              "command": "bgzip -fc ${outputvcffile} > ${outputvcffile}.gz",
              "resources": {
                "cores": "1",
                "memory": "8GB"
              }, 
              "input_ports": [              
                {
                  "name": "compressvcf_in",
                  "file_path": "${outputvcffile}"
                }             
              ],
              "output_ports": [
                {
                  "name": "compressvcf_out",
                  "file_path": "${outputvcffile}.gz"
                }
              ]
            }, 
            {
              "name": "indexcompressedvcf",
              "environment": {
                "docker_image": "${tabix_container}"
              }, 
              "command": "tabix -p vcf ${outputvcffile}.gz",
              "resources": {
                "cores": "1",
                "memory": "8GB"
              }, 
              "input_ports": [              
                {
                  "name": "indexcompressedvcf_in",
                  "file_path": "${outputvcffile}.gz"
                }             
              ],
              "output_ports": [
                {
                  "name": "indexcompressedvcf_out",
                  "file_path": "${outputvcffile}.gz.tbi"
                }
              ]
            }
          ] 
        }
      ]
    }
