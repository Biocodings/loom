---
- name: Start the various components of a loom server
  hosts: localhost
  connection: local

  roles:
    - local

  vars:
    # These vars only affect file locations in containers, hence
    # belong here rather than in the user-visible settings file
    nginx_conf_file: nginx.conf
    loom_settings_home_in_container: /settings
 
    # We look up most 'env' vars on the fly, but these need to be defined
    # for use by the 'template' module
    loom_nginx_internal_port: "{{ lookup('env', 'LOOM_NGINX_INTERNAL_PORT') }}"
    loom_nginx_server_name: "{{ lookup('env', 'LOOM_NGINX_SERVER_NAME') }}"
    loom_nginx_webportal_root: "{{ lookup('env', 'LOOM_NGINX_WEBPORTAL_ROOT') }}"
    loom_nginx_access_log: "{{ lookup('env', 'LOOM_NGINX_ACCESS_LOG') }}"
    loom_nginx_error_log: "{{ lookup('env', 'LOOM_NGINX_ERROR_LOG') }}"
    loom_master_internal_port: "{{ lookup('env', 'LOOM_MASTER_INTERNAL_PORT') }}"
    loom_server_url: "http://127.0.0.1:{{ lookup('env', 'LOOM_EXTERNAL_PORT') }}"

  tasks:
    - name: Start a MySQL database container
      docker_container:
        name: "{{ loom_mysql_container_name }}"
        hostname: "{{ loom_mysql_container_name }}"
        image: "{{ lookup('env', 'LOOM_MYSQL_IMAGE') }}"
        restart_policy: always
        api_version: auto
        env:
          MYSQL_RANDOM_ROOT_PASSWORD: "{{lookup('env', 'LOOM_MYSQL_RANDOM_ROOT_PASSWORD')}}"
          MYSQL_DATABASE: "{{lookup('env', 'LOOM_MYSQL_DATABASE')}}"
          MYSQL_USER: "{{lookup('env', 'LOOM_MYSQL_USER')}}"
          MYSQL_PASSWORD: "{{lookup('env', 'LOOM_MYSQL_PASSWORD')}}"

    - name: Start a rabbitmq container to handle message passing for asynchronous tasks
      docker_container:
        name: "{{ loom_rabbitmq_container_name }}"
        hostname: "{{ loom_rabbitmq_container_name }}"
        image: "{{ lookup('env', 'LOOM_RABBITMQ_IMAGE') }}"
        restart_policy: always
        api_version: auto
        env:
          RABBITMQ_USER: "{{lookup('env', 'LOOM_RABBITMQ_GUEST')}}"
          RABBITMQ_PASSWORD: "{{lookup('env', 'LOOM_RABBITMQ_PASSWORD')}}"
          RABBITMQ_HOST: "{{lookup('env', 'LOOM_RABBITMQ_HOST')}}"
          RABBITMQ_PORT: "{{lookup('env', 'LOOM_RABBITMQ_PORT')}}"
          RABBITMQ_VHOST: "{{lookup('env', 'LOOM_RABBITMQ_VHOST')}}"

    - name: Start a container with celery workers to run asynchronous tasks
      docker_container:
        name: "{{ loom_worker_container_name }}"
        image: "{{ lookup('env', 'LOOM_DOCKER_IMAGE') }}"
        command: /loomengine/bin/run_worker.sh
        restart_policy: always
        api_version: auto
        env_file: "{{ lookup('env', 'LOOM_SETTINGS_HOME') }}/{{ lookup('env', 'LOOM_ADMIN_SETTINGS_FILE') }}"
        env:
          C_FORCE_ROOT: true
          LOOM_SETTINGS_HOME: "{{ loom_settings_home_in_container }}"
          LOOM_MYSQL_HOST: "{{ loom_mysql_container_name }}"
          LOOM_RABBITMQ_HOST: "{{ loom_rabbitmq_container_name }}"

        volumes:
          - /loomengine/loomengine/portal
          - "{{ lookup('env', 'LOOM_SETTINGS_HOME') }}:{{ loom_settings_home_in_container }}"
        links:
          - "{{ loom_mysql_container_name }}"
          - "{{ loom_rabbitmq_container_name }}"

    - name: Start a container with the Loom Master webserver
      docker_container:
        name: "{{ loom_master_container_name }}"
        hostname: "{{ loom_master_container_name }}"
        image: "{{ lookup('env', 'LOOM_DOCKER_IMAGE') }}"
        command: /loomengine/bin/run_master.sh
        restart_policy: always
        api_version: auto
        env_file: "{{ lookup('env', 'LOOM_SETTINGS_HOME') }}/{{ lookup('env', 'LOOM_ADMIN_SETTINGS_FILE') }}"
        env:
          LOOM_SETTINGS_HOME: "{{ loom_settings_home_in_container }}"
          LOOM_MYSQL_HOST: "{{ loom_mysql_container_name }}"
          LOOM_RABBITMQ_HOST: "{{ loom_rabbitmq_container_name }}"
        volumes:
          - /loomengine/loomengine/portal
          - "{{ lookup('env', 'LOOM_SETTINGS_HOME') }}:{{ loom_settings_home_in_container }}"
        links:
          - "{{ loom_mysql_container_name }}"
          - "{{ loom_rabbitmq_container_name }}"

    - name: Create a config file for the NGINX web server
      template:
        src: templates/local.nginx.conf
        dest: "{{ lookup('env', 'LOOM_SETTINGS_HOME') }}/{{ lookup('env', 'LOOM_ADMIN_FILES_DIR') }}/nginx.conf"

    - name: Start an NGINX server container
      docker_container:
        name: "{{ loom_nginx_container_name }}"
        image: "{{ lookup('env', 'LOOM_NGINX_IMAGE') }}"
        restart_policy: always
        api_version: auto
        volumes:
          - "{{ lookup('env', 'LOOM_SETTINGS_HOME') }}/{{ lookup('env', 'LOOM_ADMIN_FILES_DIR') }}/nginx.conf:/etc/nginx/conf.d/default.conf"
        volumes_from:
          - "{{ loom_master_container_name }}"
        links:
          - "{{ loom_master_container_name }}"
        ports:
          - "{{ lookup('env', 'LOOM_EXTERNAL_PORT') }}:{{ lookup('env', 'LOOM_NGINX_INTERNAL_PORT') }}"

    - name: Create connection settings file so command line client knows where to find server
      ini_file:
        dest: "{{ lookup('env', 'LOOM_SETTINGS_HOME') }}/{{ lookup('env', 'LOOM_CONNECTION_SETTINGS_FILE') }}"
        state: present
        create: yes
        section: "connection-settings"
        option: LOOM_SERVER_URL
        value: "{{ loom_server_url }}"

    - name: Wait for Loom server port to be available
      wait_for: port="{{ lookup('env', 'LOOM_EXTERNAL_PORT') }}"

    - name: Wait for Loom server to start. (retry messages are normal)
      uri: "url={{ loom_server_url }}/api/status/ validate_certs=False"
      register: response
      until: response.status == 200
      retries: 30
      delay: 10
