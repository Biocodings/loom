---
- name: Create SSH keys for the server and worker.
  hosts: localhost
  connection: local
  become: yes
  vars_files:
  - vars/common.yml
  - vars/gcloud_server.yml
  tasks:
  - include: tasks/create_ssh_key.yml
  - include: tasks/create_ssh_key.yml remote_user={{worker_remote_user}} ssh_private_key_file_path={{worker_ssh_private_key_file_path}}
  - file: path="{{worker_ssh_private_key_file_path}}" mode="o+r"

- name: Create a new instance for the Loom server.
  hosts: localhost
  connection: local
  vars_files:
  - vars/common.yml
  - vars/gcloud_server.yml
  tasks:
  - include: tasks/gcloud_create_instance.yml
  - include: tasks/gcloud_configure_instance_ssh.yml

- name: Create connection settings files now that we have server IPs.
  hosts: localhost
  connection: local
  vars_files:
  - vars/common.yml
  - vars/gcloud_server.yml
  tasks:
  - include: tasks/create_connection_settings.yml server_url={{server_protocol}}://{{groups['new_instances'][0]}}:{{server_port}}
  - include: tasks/create_connection_settings.yml server_url={{server_protocol}}://{{server_ip_for_worker}}:{{server_port}} connection_settings_file={{worker_connection_settings_file}}

- name: Copy inventory directory from client to server
  copy:
    src: "{{settings_home}}/{{loom_inventory_dir}}/"
    dest: "{{server_settings_home}}/{{loom_inventory_dir}}"

- name: Set inventory files to be executable.
  file:
    path: "{{server_settings_home}}/{{loom_inventory_dir}}"
    state: directory
    mode: "a+x"
    recurse: yes

- name: Copy worker connection settings file from client to server.
  copy:
    src: "{{settings_home}}/{{worker_connection_settings_file}}"
    dest: "{{server_settings_home}}"

- name: Copy worker SSH private key from client to server.
  copy:
    src: "{{settings_home}}/{{admin_files_dir}}/{{worker_ssh_private_key_file_path}}"
    dest: "{{server_settings_home}}/{{admin_files_dir}}"

- name: Copy worker SSH public key from client to server.
  copy:
    src: "{{settings_home}}/{{admin_files_dir}}/{{worker_ssh_private_key_file_path}}.pub"
    dest: "{{server_settings_home}}/{{admin_files_dir}}"

- name: Create storage bucket. Ignore error if bucket already exists.
  hosts: localhost
  vars_files:
  - vars/common.yml
  - vars/gcloud_server.yml
  tasks:
  - include: tasks/create_google_storage_bucket.yml

- name: Install Docker on the Loom server.
  hosts: new_instances
  become: yes
  roles:
  - {role: docker, when: "not {{lookup('env', 'LOOM_GCLOUD_SERVER_SKIP_INSTALLS')|bool}}"}
  - {role: docker-py, when: "not {{lookup('env', 'LOOM_GCLOUD_SERVER_SKIP_INSTALLS')|bool}}"}
  tasks:
  - include: tasks/gcloud_create_docker_group.yml

- name: Pull Docker images on the new instance.
  hosts: new_instances
  become: yes
  become_user: loom
  vars_files:
  - vars/common.yml
  - vars/gcloud_server.yml
  tasks:
  - include: tasks/pull_docker_images.yml

- name: Start the Loom server.
  hosts: new_instances
  become: yes
  become_user: loom
  vars_files:
  - vars/common.yml
  - vars/gcloud_server.yml
  vars:
  - server_url: "{{lookup('ini', 'LOOM_SERVER_URL type=properties file='+settings_home+'/'+connection_settings_file)}}"
  tasks:
  - include: tasks/start_server.yml
