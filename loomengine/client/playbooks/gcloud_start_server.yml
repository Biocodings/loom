---
- hosts: localhost
  connection: local
  vars_files:
    - vars/gcloud.yml
  vars:
    testvar: "{{ [loom_mysql_container_name if loom_mysql_create_docker_container else none,\
            loom_rabbitmq_container_name] | reject('none') | list }}"
  tasks:
    - debug: var=loom_mysql_container_name
    - debug: var=loom_mysql_host
    - debug: msg="{% for item in ['asdf', loom_mysql_container_name if loom_mysql_create_docker_container else none] | reject('none') %}{{item}}{% endfor %}"
    - debug: var=testvar

- name: Create a new instance for the Loom server.
  hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
  - vars/gcloud.yml
  tasks:
  - include: tasks/gcloud_create_instance.yml
  - include: tasks/gcloud_configure_instance_ssh.yml

- name: Create connection settings file now that we have a server IP.
  hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
  - vars/gcloud.yml
  vars:
  - loom_server_url: "{{loom_server_protocol}}://{{groups['new_instances'][0]}}:{{loom_external_port}}"
  tasks:
  - include: tasks/create_connection_settings.yml

- name: Install Docker on the Loom server.
  hosts: new_instances
  become: yes
  roles:
  - {role: docker, when: "not {{lookup('env', 'LOOM_GCLOUD_SERVER_SKIP_INSTALLS')}}"}
  - {role: docker-py, when: "not {{lookup('env', 'LOOM_GCLOUD_SERVER_SKIP_INSTALLS')}}"}
  tasks:
  - include: tasks/gcloud_create_docker_group.yml

- name: Set up the Loom server on the new instance.
  hosts: new_instances
  become: yes
  become_user: loom
  vars_files:
  - vars/gcloud.yml
  tasks:
  - include: tasks/gcloud_setup_server.yml

- name: Start the Loom server.
  hosts: new_instances
  become: yes
  become_user: loom
  vars_files:
  - vars/gcloud.yml
  vars:
  - loom_server_url: "{{lookup('ini', 'LOOM_SERVER_URL type=properties file='+loom_connection_settings_full_path)}}"
  tasks:
  - include: tasks/start_server.yml
