  - name: Update apt-get cache.
    apt: update_cache=yes
    register: result
    until: result|succeeded
    retries: 6
    delay: 10
  - name: Install pip using apt-get.
    apt: name=python-pip state=present
    register: result
    until: result|succeeded
    retries: 6
    delay: 10
  - name: Install python-dev using apt-get, which is needed to build certain Python dependencies.
    apt: name=python-dev state=present
    register: result
    until: result|succeeded
    retries: 6
    delay: 10
  - name: Install build-essential using apt-get, which is needed to build certain Python dependencies.
    apt: name=build-essential state=present
    register: result
    until: result|succeeded
    retries: 6
    delay: 10
  - name: Install libffi-dev using apt-get, which is needed to build certain Python dependencies.
    apt: name=libffi-dev state=present
    register: result
    until: result|succeeded
    retries: 6
    delay: 10
  - name: Install libmysqlclient-dev using apt-get, which is needed to install the MySQL-python Python package.
    apt: name=libmysqlclient-dev state=present
    register: result
    until: result|succeeded
    retries: 6
    delay: 10
  - name: Install virtualenv using pip.
    pip: name=virtualenv state=present
  - name: Install Loom using pip in a virtualenv. Make sure to install the same version on the server as the client.
    pip: name=loomengine virtualenv=/opt/loom version={{client_version}}
  - name: Configure Loom client to manage server on this instance.
    shell: source /opt/loom/bin/activate; loom server set local
    args:
      executable: /bin/bash
  - name: Copy deploy settings to server.
    copy: src={{deploy_settings_filename}} dest={{remote_loom_settings_path}}/local_deploy_settings.ini
  - name: Copy service account key to server.
    copy: src={{gce_pem_file_path}} dest={{remote_loom_settings_path}}
  - name: Create directory for SSL certificate and key.
    file: path={{remote_loom_settings_path}}/ssl state=directory mode=0755
  - name: Create self-signed SSL certificate and key.
    command: openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout {{remote_loom_settings_path}}/ssl/ssl.key -out {{remote_loom_settings_path}}/ssl/ssl.crt -subj "/C=US/ST=California/L=Palo Alto/O=Stanford University/CN={{ansible_fqdn}}"
  - name: Generate ssh keys.
    shell: ssh-keygen -t rsa -f ~/.ssh/google_compute_engine -P ""
  - name: Configure GCE ssh keys.
    shell: gcloud compute config-ssh 
